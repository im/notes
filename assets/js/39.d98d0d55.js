(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{483:function(e,t,a){"use strict";a.r(t);var n=a(19),s=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[e._v("网页布局（layout）是 CSS 的一个重点应用。")]),e._v(" "),a("p",[a("img",{attrs:{src:"/notes/note_images/67359FCF-DBA7-4859-81A4-615B683A83AA-82216-00013B9ED8229A40/bg2015071001.gif",alt:"bg2015071001.gif"}}),e._v("\n布局的传统解决方案，基于 "),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/box_model",target:"_blank",rel:"noopener noreferrer"}},[e._v("盒状模型"),a("OutboundLink")],1),e._v(" ，依赖 "),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/display",target:"_blank",rel:"noopener noreferrer"}},[e._v("display"),a("OutboundLink")],1),e._v(" 属性 + "),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/position",target:"_blank",rel:"noopener noreferrer"}},[e._v("position"),a("OutboundLink")],1),e._v(" 属性 + "),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/float",target:"_blank",rel:"noopener noreferrer"}},[e._v("float"),a("OutboundLink")],1),e._v(" 属性。它对于那些特殊布局非常不方便，比如， "),a("a",{attrs:{href:"https://css-tricks.com/centering-css-complete-guide/",target:"_blank",rel:"noopener noreferrer"}},[e._v("垂直居中"),a("OutboundLink")],1),e._v(" 就不容易实现。")]),e._v(" "),a("p",[a("img",{attrs:{src:"/notes/note_images/7B127789-9884-457E-8C58-55F754982E45-82216-00013B9ED808867D/bg2015071002.png",alt:"bg2015071002.png"}}),e._v("\n2009年，W3C 提出了一种新的方案----Flex 布局，可以简便、完整、响应式地实现各种页面布局。目前，它已经得到了所有浏览器的支持，这意味着，现在就能很安全地使用这项功能。")]),e._v(" "),a("p",[a("img",{attrs:{src:"/notes/note_images/4FB442D8-134A-4F80-B287-CF20BD46A070-82216-00013B9ED7E4BF11/bg2015071003.jpg",alt:"bg2015071003.jpg"}}),e._v("\nFlex 布局将成为未来布局的首选方案。本文介绍它的语法， "),a("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2015/07/flex-examples.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("下一篇文章"),a("OutboundLink")],1),e._v(" 给出常见布局的 Flex 写法。网友 "),a("a",{attrs:{href:"http://vgee.cn/",target:"_blank",rel:"noopener noreferrer"}},[e._v("JailBreak"),a("OutboundLink")],1),e._v(" 为本文的所有示例制作了 "),a("a",{attrs:{href:"http://static.vgee.cn/static/index.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Demo"),a("OutboundLink")],1),e._v(" ，也可以参考。")]),e._v(" "),a("p",[e._v("以下内容主要参考了下面两篇文章： "),a("a",{attrs:{href:"https://css-tricks.com/snippets/css/a-guide-to-flexbox/",target:"_blank",rel:"noopener noreferrer"}},[e._v("A Complete Guide to Flexbox"),a("OutboundLink")],1),e._v(" 和 "),a("a",{attrs:{href:"https://scotch.io/tutorials/a-visual-guide-to-css3-flexbox-properties",target:"_blank",rel:"noopener noreferrer"}},[e._v("A Visual Guide to CSS3 Flexbox Properties"),a("OutboundLink")],1),e._v(" 。\n")]),e._v(" "),a("p",[e._v('Flex 是 Flexible Box 的缩写，意为"弹性布局"，用来为盒状模型提供最大的灵活性。')]),e._v(" "),a("p",[e._v("任何一个容器都可以指定为 Flex 布局。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(".box{\n  display: flex;\n}\n")])])]),a("p",[e._v("行内元素也可以使用 Flex 布局。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(".box{\n  display: inline-flex;\n}\n")])])]),a("p",[e._v("Webkit 内核的浏览器，必须加上 "),a("code",[e._v("-webkit")]),e._v(" 前缀。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(".box{\n  display: -webkit-flex; /* Safari */\n  display: flex;\n}\n")])])]),a("p",[e._v("注意，设为 Flex 布局以后，子元素的 "),a("code",[e._v("float")]),e._v("、"),a("code",[e._v("clear")]),e._v(" 和 "),a("code",[e._v("vertical-align")]),e._v(" 属性将失效。")]),e._v(" "),a("p",[e._v('采用 Flex 布局的元素，称为 Flex 容器（flex container），简称"容器"。它的所有子元素自动成为容器成员，称为 Flex 项目（flex item），简称"项目"。')]),e._v(" "),a("p",[a("img",{attrs:{src:"/notes/note_images/3BA59B43-7C5D-4111-9ACD-2CBFBD5E60EB-82216-00013B9ED7B3DFCE/bg2015071004.png",alt:"bg2015071004.png"}}),e._v("\n容器默认存在两根轴：水平的主轴（main axis）和垂直的交叉轴（cross axis）。主轴的开始位置（与边框的交叉点）叫做 "),a("code",[e._v("main start")]),e._v(" ，结束位置叫做 "),a("code",[e._v("main end")]),e._v(" ；交叉轴的开始位置叫做 "),a("code",[e._v("cross start")]),e._v(" ，结束位置叫做 "),a("code",[e._v("cross end")]),e._v(" 。")]),e._v(" "),a("p",[e._v("项目默认沿主轴排列。单个项目占据的主轴空间叫做 "),a("code",[e._v("main size")]),e._v(" ，占据的交叉轴空间叫做 "),a("code",[e._v("cross size")]),e._v(" 。")]),e._v(" "),a("p",[e._v("以下6个属性设置在容器上。")]),e._v(" "),a("ul",[a("li",[e._v("flex-direction")]),e._v(" "),a("li",[e._v("flex-wrap")]),e._v(" "),a("li",[e._v("flex-flow")]),e._v(" "),a("li",[e._v("justify-content")]),e._v(" "),a("li",[e._v("align-items")]),e._v(" "),a("li",[e._v("align-content")])]),e._v(" "),a("p",[a("code",[e._v("flex-direction")]),e._v(" 属性决定主轴的方向（即项目的排列方向）。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(".box {\n  flex-direction: row | row-reverse | column | column-reverse;\n}\n")])])]),a("p",[a("img",{attrs:{src:"/notes/note_images/490CA10E-CFD7-4D43-BBB3-5127A762B2FB-82216-00013B9ED797E57B/bg2015071005.png",alt:"bg2015071005.png"}}),e._v("\n它可能有4个值。")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("row")]),e._v(" （默认值）：主轴为水平方向，起点在左端。")]),e._v(" "),a("li",[a("code",[e._v("row-reverse")]),e._v(" ：主轴为水平方向，起点在右端。")]),e._v(" "),a("li",[a("code",[e._v("column")]),e._v(" ：主轴为垂直方向，起点在上沿。")]),e._v(" "),a("li",[a("code",[e._v("column-reverse")]),e._v(" ：主轴为垂直方向，起点在下沿。")])]),e._v(" "),a("p",[e._v('默认情况下，项目都排在一条线（又称"轴线"）上。 '),a("code",[e._v("flex-wrap")]),e._v(" 属性定义，如果一条轴线排不下，如何换行。")]),e._v(" "),a("p",[a("img",{attrs:{src:"/notes/note_images/446C5978-3717-4DC0-8662-7741137484F0-82216-00013B9ED78313DD/bg2015071006.png",alt:"bg2015071006.png"}})]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(".box{\n  flex-wrap: nowrap | wrap | wrap-reverse;\n}\n")])])]),a("p",[e._v("它可能取三个值。")]),e._v(" "),a("p",[e._v("（1） "),a("code",[e._v("nowrap")]),e._v(" （默认）：不换行。")]),e._v(" "),a("p",[a("img",{attrs:{src:"/notes/note_images/431748F2-AFBE-423A-875E-B1D196AB7C2D-82216-00013B9ED76BFEBE/bg2015071007.png",alt:"bg2015071007.png"}}),e._v("\n（2） "),a("code",[e._v("wrap")]),e._v(" ：换行，第一行在上方。")]),e._v(" "),a("p",[a("img",{attrs:{src:"/notes/note_images/B0C93E31-FBD4-4EBD-A05B-432D6E0C590D-82216-00013B9ED756B5B4/bg2015071008.jpg",alt:"bg2015071008.jpg"}}),e._v("\n（3） "),a("code",[e._v("wrap-reverse")]),e._v(" ：换行，第一行在下方。")]),e._v(" "),a("p",[a("img",{attrs:{src:"/notes/note_images/5010AFBB-73A9-4004-B80C-5578000A0944-82216-00013B9ED7410C02/bg2015071009.jpg",alt:"bg2015071009.jpg"}})]),e._v(" "),a("p",[a("code",[e._v("flex-flow")]),e._v(" 属性是 "),a("code",[e._v("flex-direction")]),e._v(" 属性和 "),a("code",[e._v("flex-wrap")]),e._v(" 属性的简写形式，默认值为 "),a("code",[e._v("row nowrap")]),e._v(" 。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(".box {\n  flex-flow: <flex-direction> || <flex-wrap>;\n}\n")])])]),a("p",[a("code",[e._v("justify-content")]),e._v(" 属性定义了项目在主轴上的对齐方式。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(".box {\n  justify-content: flex-start | flex-end | center | space-between | space-around;\n}\n")])])]),a("p",[a("img",{attrs:{src:"/notes/note_images/85431DD8-8882-44F5-B0CB-891333CCF4BE-82216-00013B9ED7259CC8/bg2015071010.png",alt:"bg2015071010.png"}}),e._v("\n它可能取5个值，具体对齐方式与轴的方向有关。下面假设主轴为从左到右。")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("flex-start")]),e._v(" （默认值）：左对齐")]),e._v(" "),a("li",[a("code",[e._v("flex-end")]),e._v(" ：右对齐")]),e._v(" "),a("li",[a("code",[e._v("center")]),e._v(" ： 居中")]),e._v(" "),a("li",[a("code",[e._v("space-between")]),e._v(" ：两端对齐，项目之间的间隔都相等。")]),e._v(" "),a("li",[a("code",[e._v("space-around")]),e._v(" ：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。")])]),e._v(" "),a("p",[a("code",[e._v("align-items")]),e._v(" 属性定义项目在交叉轴上如何对齐。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(".box {\n  align-items: flex-start | flex-end | center | baseline | stretch;\n}\n")])])]),a("p",[a("img",{attrs:{src:"/notes/note_images/DFEE0BC4-044A-4838-85C1-652D2333F8BE-82216-00013B9ED70F3045/bg2015071011.png",alt:"bg2015071011.png"}}),e._v("\n它可能取5个值。具体的对齐方式与交叉轴的方向有关，下面假设交叉轴从上到下。")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("flex-start")]),e._v(" ：交叉轴的起点对齐。")]),e._v(" "),a("li",[a("code",[e._v("flex-end")]),e._v(" ：交叉轴的终点对齐。")]),e._v(" "),a("li",[a("code",[e._v("center")]),e._v(" ：交叉轴的中点对齐。")]),e._v(" "),a("li",[a("code",[e._v("baseline")]),e._v(": 项目的第一行文字的基线对齐。")]),e._v(" "),a("li",[a("code",[e._v("stretch")]),e._v(" （默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。")])]),e._v(" "),a("p",[a("code",[e._v("align-content")]),e._v(" 属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(".box {\n  align-content: flex-start | flex-end | center | space-between | space-around | stretch;\n}\n")])])]),a("p",[a("img",{attrs:{src:"/notes/note_images/45FEDDC7-C196-41A6-B385-B336083565D3-82216-00013B9ED6F7A686/bg2015071012.png",alt:"bg2015071012.png"}}),e._v("\n该属性可能取6个值。")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("flex-start")]),e._v(" ：与交叉轴的起点对齐。")]),e._v(" "),a("li",[a("code",[e._v("flex-end")]),e._v(" ：与交叉轴的终点对齐。")]),e._v(" "),a("li",[a("code",[e._v("center")]),e._v(" ：与交叉轴的中点对齐。")]),e._v(" "),a("li",[a("code",[e._v("space-between")]),e._v(" ：与交叉轴两端对齐，轴线之间的间隔平均分布。")]),e._v(" "),a("li",[a("code",[e._v("space-around")]),e._v(" ：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。")]),e._v(" "),a("li",[a("code",[e._v("stretch")]),e._v(" （默认值）：轴线占满整个交叉轴。")])]),e._v(" "),a("p",[e._v("以下6个属性设置在项目上。")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("order")])]),e._v(" "),a("li",[a("code",[e._v("flex-grow")])]),e._v(" "),a("li",[a("code",[e._v("flex-shrink")])]),e._v(" "),a("li",[a("code",[e._v("flex-basis")])]),e._v(" "),a("li",[a("code",[e._v("flex")])]),e._v(" "),a("li",[a("code",[e._v("align-self")])])]),e._v(" "),a("p",[a("code",[e._v("order")]),e._v(" 属性定义项目的排列顺序。数值越小，排列越靠前，默认为0。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(".item {\n  order: <integer>;\n}\n")])])]),a("p",[a("img",{attrs:{src:"/notes/note_images/091DD95F-10F4-4160-8E30-0F22C7A07FAB-82216-00013B9ED6D59438/bg2015071013.png",alt:"bg2015071013.png"}})]),e._v(" "),a("p",[a("code",[e._v("flex-grow")]),e._v(" 属性定义项目的放大比例，默认为 "),a("code",[e._v("0")]),e._v(" ，即如果存在剩余空间，也不放大。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(".item {\n  flex-grow: <number>; /* default 0 */\n}\n")])])]),a("p",[a("img",{attrs:{src:"/notes/note_images/D66E94B6-4737-4EB3-8325-345F2776037A-82216-00013B9ED6B9D5B3/bg2015071014.png",alt:"bg2015071014.png"}}),e._v("\n如果所有项目的 "),a("code",[e._v("flex-grow")]),e._v(" 属性都为1，则它们将等分剩余空间（如果有的话）。如果一个项目的 "),a("code",[e._v("flex-grow")]),e._v(" 属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍。")]),e._v(" "),a("p",[a("code",[e._v("flex-shrink")]),e._v(" 属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(".item {\n  flex-shrink: <number>; /* default 1 */\n}\n")])])]),a("p",[a("img",{attrs:{src:"/notes/note_images/91F53B7E-F693-4927-8237-4642D0E37885-82216-00013B9ED69DD0F9/bg2015071015.jpg",alt:"bg2015071015.jpg"}}),e._v("\n如果所有项目的 "),a("code",[e._v("flex-shrink")]),e._v(" 属性都为1，当空间不足时，都将等比例缩小。如果一个项目的 "),a("code",[e._v("flex-shrink")]),e._v(" 属性为0，其他项目都为1，则空间不足时，前者不缩小。")]),e._v(" "),a("p",[e._v("负值对该属性无效。")]),e._v(" "),a("p",[a("code",[e._v("flex-basis")]),e._v(" 属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为 "),a("code",[e._v("auto")]),e._v(" ，即项目的本来大小。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(".item {\n  flex-basis: <length> | auto; /* default auto */\n}\n")])])]),a("p",[e._v("它可以设为跟 "),a("code",[e._v("width")]),e._v(" 或 "),a("code",[e._v("height")]),e._v(" 属性一样的值（比如350px），则项目将占据固定空间。")]),e._v(" "),a("p",[a("code",[e._v("flex")]),e._v(" 属性是 "),a("code",[e._v("flex-grow")]),e._v(", "),a("code",[e._v("flex-shrink")]),e._v(" 和 "),a("code",[e._v("flex-basis")]),e._v(" 的简写，默认值为 "),a("code",[e._v("0 1 auto")]),e._v(" 。后两个属性可选。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(".item {\n  flex: none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]\n}\n")])])]),a("p",[e._v("该属性有两个快捷值： "),a("code",[e._v("auto")]),e._v(" ( "),a("code",[e._v("1 1 auto")]),e._v(" ) 和 none ( "),a("code",[e._v("0 0 auto")]),e._v(" )。")]),e._v(" "),a("p",[e._v("建议优先使用这个属性，而不是单独写三个分离的属性，因为浏览器会推算相关值。")]),e._v(" "),a("p",[a("code",[e._v("align-self")]),e._v(" 属性允许单个项目有与其他项目不一样的对齐方式，可覆盖 "),a("code",[e._v("align-items")]),e._v(" 属性。默认值为 "),a("code",[e._v("auto")]),e._v(" ，表示继承父元素的 "),a("code",[e._v("align-items")]),e._v(" 属性，如果没有父元素，则等同于 "),a("code",[e._v("stretch")]),e._v(" 。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(".item {\n  align-self: auto | flex-start | flex-end | center | baseline | stretch;\n}\n")])])]),a("p",[a("img",{attrs:{src:"/notes/note_images/62DB5CD6-CDB6-487E-AF45-6F94066C7A7E-82216-00013B9ED68281B2/bg2015071016.png",alt:"bg2015071016.png"}}),e._v("\n该属性可能取6个值，除了auto，其他都与align-items属性完全一致。")]),e._v(" "),a("p",[e._v("（完）")]),e._v(" "),a("p",[a("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Flex 布局教程：语法篇"),a("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=s.exports}}]);