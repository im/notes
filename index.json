[{"content":"Vite 是一个快速、轻量级、易于使用的前端工具。它为开发者提供了一种现代的构建方式，可以快速地构建出高效且易于维护的 Web 应用程序。\n在 Vite 版本 4.2 及以上的版本中，我们可以使用 configureServer 方法来拦截 Vite 开发服务器，并将其替换为 Express HTTP 服务器。这样，我们就可以使用更加灵活的 HTTP 服务器组合，并且可以方便地实现登录、鉴权等功能。\n配置 Vite 插件 为了使用自定义的 Express 应用程序，我们需要编写一个 Vite 插件。\n我们可以通过 myPlugin 函数来创建一个新插件。这个插件暴露了一个 configureServer 方法，我们可以在这个方法中创建并配置一个 Express 应用程序。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30  import express from \u0026#39;express\u0026#39; import cors from \u0026#39;cors\u0026#39; import bodyParser from \u0026#39;body-parser\u0026#39; import cookieParser from \u0026#39;cookie-parser\u0026#39; export default function myPlugin () { return { name: \u0026#39;my-plugin\u0026#39;, configureServer (server) { const app = express() app.use(cors({ credentials: true, origin: true })) app.use(bodyParser.urlencoded({ extended: false })) app.use(cookieParser()) server.middlewares.use(app) app.use(\u0026#39;/login\u0026#39;, () =\u0026gt; { // login  }) } } }   在 configureServer 方法中，我们首先创建了一个新的 Express 应用程序 app。\n接下来，我们注册了 cors、body-parser 和 cookie-parser 中间件，这样我们就可以在应用程序中使用这些中间件了。\n然后，我们将应用程序添加到 Vite 开发服务器的中间件中，这样就可以使用自定义的 express 应用程序来处理 HTTP 请求了。\n最后，我们向应用程序中添加了一个处理 /login URL 路径的路由处理函数，用于执行登录逻辑。\n配置 Vite 使用 configureServer 来配置 Vite 开发服务器也很简单。我们只需要将插件导入应用程序，然后将其添加到 Vite 配置的 plugins 队列中，就可以完整地拦截 Vite 开发服务器了。\n1 2 3 4 5 6 7 8  import myPlugin from \u0026#39;./myPlugin\u0026#39; export default defineConfig({ // ...  plugins: [ myPlugin() ] })   结论 通过使用 configureServer 方法，我们可以轻松地拦截 Vite 开发服务器，并使用 Express HTTP 服务器来替换它。\n这种方式可以让我们在 Vite 开发服务器中使用更加灵活的 HTTP 服务器组合，并且可以方便地实现登录、鉴权等功能。\n","permalink":"http://tangxiaomi.top/notes/posts/vite/vite-or-express/","summary":"Vite 是一个快速、轻量级、易于使用的前端工具。它为开发者提供了一种现代的构建方式，可以快速地构建出高效且易于维护的 Web 应用程序。\n在 Vite 版本 4.2 及以上的版本中，我们可以使用 configureServer 方法来拦截 Vite 开发服务器，并将其替换为 Express HTTP 服务器。这样，我们就可以使用更加灵活的 HTTP 服务器组合，并且可以方便地实现登录、鉴权等功能。\n配置 Vite 插件 为了使用自定义的 Express 应用程序，我们需要编写一个 Vite 插件。\n我们可以通过 myPlugin 函数来创建一个新插件。这个插件暴露了一个 configureServer 方法，我们可以在这个方法中创建并配置一个 Express 应用程序。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30  import express from \u0026#39;express\u0026#39; import cors from \u0026#39;cors\u0026#39; import bodyParser from \u0026#39;body-parser\u0026#39; import cookieParser from \u0026#39;cookie-parser\u0026#39; export default function myPlugin () { return { name: \u0026#39;my-plugin\u0026#39;, configureServer (server) { const app = express() app.","title":"如何在 Vite 中拦截开发服务器并使用 Express"}]