[{"content":"光纤传输是一种通过光信号进行信息传输的方式。它采用光学原理控制光线的传输方向和路径，将信号在光纤中传输。相比于传统的电线传输，光纤传输具有传输速度快、宽带高、传输距离远、抗干扰能力强等优势。现在，越来越多的地方采用光纤传输信息，如互联网、电视、医疗、安防等领域。\n光的信息表示方式 在光纤中传输的信息可以采用多种方式进行表述。下面分别介绍三种主要的光信号信息表示方式：\n光的强度 光的强度是指光线中的能量密度。在光纤中，光的强度可以表示信息的二进制编码，即通过光的强弱来表述数字或字符。例如，在光传输的数字“0”中，光的强度可以是低强度；在数字“1”中，光的强度可以是高强度。一系列的光脉冲组合起来，就可以形成图像、音频和视频等信息。\n光的频率 光的频率是指光波的震荡频率。在光纤中，信号可以通过改变光的频率来表达信息。由于光的频率非常高，因此通过频率来表达的信息可以非常丰富，包括数字、字符、图像、音频、视频等。\n光的相位 光的相位是指光波的相位差。在光纤中，信号可以通过改变光相位差来表达信息。光相位差的微小变化可以被高精度探测器识别，从而实现信息的传输。这种方式适用于高速数据传输。\n光纤传输原理 光纤是一根粗如头发的细长纤维，内部被分成许多对称的径向区和环形区。在光纤中，光线会被不断反射和折射，从而沿着纤维传播。光线入射光纤的位置和角度会决定它是否会被纤维壁反射或透过，从而控制光信号的传输方向和路径。通过光纤传输信息的过程，一般可以分为以下几个步骤：\n 发声器向光源发射光  如果把光源比作太阳，那么发声器就相当于太阳系中各个星球的轨道，可以决定光线的传播方向。\n光线进入耦合器  耦合器相当于两个天体之间的引力场，可以改变光线的入射角度和移动方向，使得光线有效的进入光纤。\n光线在光纤中传播，到达接收端  光纤内的光线可以在多次反射和折射后到达接收端，时延很短，速度很快。这个过程就像行星在太空中的运动，行星受到吸引力，依靠惯性绕着太阳运转。\n接收器检测受到的光，并将其转换成电信号  接收器相当于行星的卫星，它可以监听光的转换过程，将光信号转换成电信号。\n电信号经过信号处理器解码，恢复成原本的信息  信号处理器相当于分析行星轨道的天文学家，可以解读光信号，并将其转换成原始信息，如图像、音频或视频。\n结论 光纤的应用已经渗透到了各个领域。它以它的高速度，宽带，抗干扰等技术特点 ，优化现有的网络通信技术，推动科学和技术的发展，提高现代化基础设施的建设水平。\n","permalink":"http://tangxiaomi.top/notes/posts/pop-sci/test/","summary":"光纤传输是一种通过光信号进行信息传输的方式。它采用光学原理控制光线的传输方向和路径，将信号在光纤中传输。相比于传统的电线传输，光纤传输具有传输速度快、宽带高、传输距离远、抗干扰能力强等优势。现在，越来越多的地方采用光纤传输信息，如互联网、电视、医疗、安防等领域。\n光的信息表示方式 在光纤中传输的信息可以采用多种方式进行表述。下面分别介绍三种主要的光信号信息表示方式：\n光的强度 光的强度是指光线中的能量密度。在光纤中，光的强度可以表示信息的二进制编码，即通过光的强弱来表述数字或字符。例如，在光传输的数字“0”中，光的强度可以是低强度；在数字“1”中，光的强度可以是高强度。一系列的光脉冲组合起来，就可以形成图像、音频和视频等信息。\n光的频率 光的频率是指光波的震荡频率。在光纤中，信号可以通过改变光的频率来表达信息。由于光的频率非常高，因此通过频率来表达的信息可以非常丰富，包括数字、字符、图像、音频、视频等。\n光的相位 光的相位是指光波的相位差。在光纤中，信号可以通过改变光相位差来表达信息。光相位差的微小变化可以被高精度探测器识别，从而实现信息的传输。这种方式适用于高速数据传输。\n光纤传输原理 光纤是一根粗如头发的细长纤维，内部被分成许多对称的径向区和环形区。在光纤中，光线会被不断反射和折射，从而沿着纤维传播。光线入射光纤的位置和角度会决定它是否会被纤维壁反射或透过，从而控制光信号的传输方向和路径。通过光纤传输信息的过程，一般可以分为以下几个步骤：\n 发声器向光源发射光  如果把光源比作太阳，那么发声器就相当于太阳系中各个星球的轨道，可以决定光线的传播方向。\n光线进入耦合器  耦合器相当于两个天体之间的引力场，可以改变光线的入射角度和移动方向，使得光线有效的进入光纤。\n光线在光纤中传播，到达接收端  光纤内的光线可以在多次反射和折射后到达接收端，时延很短，速度很快。这个过程就像行星在太空中的运动，行星受到吸引力，依靠惯性绕着太阳运转。\n接收器检测受到的光，并将其转换成电信号  接收器相当于行星的卫星，它可以监听光的转换过程，将光信号转换成电信号。\n电信号经过信号处理器解码，恢复成原本的信息  信号处理器相当于分析行星轨道的天文学家，可以解读光信号，并将其转换成原始信息，如图像、音频或视频。\n结论 光纤的应用已经渗透到了各个领域。它以它的高速度，宽带，抗干扰等技术特点 ，优化现有的网络通信技术，推动科学和技术的发展，提高现代化基础设施的建设水平。","title":"光纤传输信息"},{"content":"Vite 是一个快速、轻量级、易于使用的前端工具。它为开发者提供了一种现代的构建方式，可以快速地构建出高效且易于维护的 Web 应用程序。\n在 Vite 版本 4.2 及以上的版本中，我们可以使用 configureServer 方法来拦截 Vite 开发服务器，并将其替换为 express HTTP 服务器。这样，我们就可以使用更加灵活的 HTTP 服务器组合，并且可以方便地实现登录、鉴权等功能。\n配置 Vite 插件 为了使用自定义的 express 应用程序，我们需要编写一个 Vite 插件\n我们可以通过 myPlugin 函数来创建一个新插件。这个插件暴露了一个 configureServer 方法，我们可以在这个方法中创建并配置一个 express 应用程序。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30  import express from \u0026#39;express\u0026#39; import cors from \u0026#39;cors\u0026#39; import bodyParser from \u0026#39;body-parser\u0026#39; import cookieParser from \u0026#39;cookie-parser\u0026#39; export default function myPlugin () { return { name: \u0026#39;my-plugin\u0026#39;, configureServer (server) { const app = express() app.use(cors({ credentials: true, origin: true })) app.use(bodyParser.urlencoded({ extended: false })) app.use(cookieParser()) server.middlewares.use(app) app.use(\u0026#39;/login\u0026#39;, () =\u0026gt; { // login  }) } } }   在 configureServer 方法中，我们首先创建了一个新的 express 应用程序 app。\n接下来，我们注册了 cors、body-parser 和 cookie-parser 中间件，这样我们就可以在应用程序中使用这些中间件了。\n然后，我们将应用程序添加到 Vite 开发服务器的中间件中，这样就可以使用自定义的 express 应用程序来处理 HTTP 请求了。\n最后，我们向应用程序中添加了一个处理 /login URL 路径的路由处理函数，用于执行登录逻辑。\n配置 Vite 使用 configureServer 来配置 Vite 开发服务器也很简单。我们只需要将插件导入应用程序，然后将其添加到 Vite 配置的 plugins 队列中，就可以完整地拦截 Vite 开发服务器了。\n1 2 3 4 5 6 7 8  import myPlugin from \u0026#39;./myPlugin\u0026#39; export default defineConfig({ // ...  plugins: [ myPlugin() ] })   结论 通过使用 configureServer 方法，我们可以轻松地拦截 Vite 开发服务器，并使用 express HTTP 服务器来替换它。\n这种方式可以让我们在 Vite 开发服务器中使用更加灵活的 HTTP 服务器组合，并且可以方便地实现登录、鉴权等功能。\n","permalink":"http://tangxiaomi.top/notes/posts/vite/vite-or-express/","summary":"Vite 是一个快速、轻量级、易于使用的前端工具。它为开发者提供了一种现代的构建方式，可以快速地构建出高效且易于维护的 Web 应用程序。\n在 Vite 版本 4.2 及以上的版本中，我们可以使用 configureServer 方法来拦截 Vite 开发服务器，并将其替换为 express HTTP 服务器。这样，我们就可以使用更加灵活的 HTTP 服务器组合，并且可以方便地实现登录、鉴权等功能。\n配置 Vite 插件 为了使用自定义的 express 应用程序，我们需要编写一个 Vite 插件\n我们可以通过 myPlugin 函数来创建一个新插件。这个插件暴露了一个 configureServer 方法，我们可以在这个方法中创建并配置一个 express 应用程序。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30  import express from \u0026#39;express\u0026#39; import cors from \u0026#39;cors\u0026#39; import bodyParser from \u0026#39;body-parser\u0026#39; import cookieParser from \u0026#39;cookie-parser\u0026#39; export default function myPlugin () { return { name: \u0026#39;my-plugin\u0026#39;, configureServer (server) { const app = express() app.","title":"如何在 Vite 中拦截开发服务器并使用 express"}]